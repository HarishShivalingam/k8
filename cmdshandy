List all the pods
kubectl get pods -o=jsonpath="{.items[*]['metadata.name',
'metadata.namespace']}"

custom 
kubectl get pods -o=custom-columns="POD_NAME:.metadata.name,
POD_STATUS:.status.containerStatuses[].state"

image version 
jsonpath='{.spec.containers[].image}{"\n"}'

start time
kubect1 get pods -o=jsonpath='{range
.items[*]}{.metadata.name}{"\t"}{.status.podIP}{"\n"}{end}'

status
kubectl get po -o=custom-columns="POD_NAME:.metadata.name,
POD_STATUS:.status.containerStatuses[].state"

image version
kubectl get po nginx -o
jsonpath='{.spec.containers[].image}{"\n"}'

IP
Kubect1 get po -o wide
Using JsonPath
kubect1 get pods -o=jsonpath='{range
.items[*]}{.metadata.name}{"\t"}{.status.podIP}{"\n"}{end}'

kubectl get po nginx --v=7

cmd with in pod creation
kubectl run busybox --image= --restart=Never -- /bin/sh -c
"sleep 3600"
kubectl run busybox --image= -it --rm --restart=Never --
/bin/sh -c 'echo hello world'

-o NAME

inside pods env
kubectl run busybox --image=busybox --restart=Never –-rm -it -- env > envpod.yaml

DNS
create dep
expose port and target port (svc)
create pod
inside the pod 
k exec -it pod --nslookup expservice >
k exec -it pod --nslookup dep.pod.default.pod >  

NonPv

end 

volumes:
- name
  emptyDir[]
  
  cnt
  [“/bin/sh”, “-c”, “if [ -f /workdir/xx.txt ]; then sleep 10000; else exit 1; fi”]
  initcnt
  ["/bin/sh", "-c", "touch /workdir/xx.txt"]
cmd 
